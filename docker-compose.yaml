
services:
    server:
        container_name: management-server
        build:
          context: .
          dockerfile: Dockerfile
        depends_on:
            database:
                condition: service_healthy
            redis:
                condition: service_started
        env_file:
            - .env.prod
        ports:
          - $PORT:3001
        networks:
            - management-network

    database:
        container_name: management-database
        image: postgres:16-alpine
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres_password
            POSTGRES_DB: postgres
        ports:
            - 5432:5432
        volumes:
            - .docker/db:/var/lib/postgresql
        networks:
            - management-network
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready']
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        container_name: management-redis
        image: redis:7-alpine
        restart: always
        command: redis-server --save 20 1 --loglevel warning --requirepass redis_password
        volumes:
            - .docker/redis:/data
        ports:
          - 6379:6379
        networks:
            - management-network
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 10s
            timeout: 5s
            retries: 5
    
    ui-admin:
        container_name: management-ui-admin
        build:
          context: ../ui-admin
          dockerfile: Dockerfile
        env_file:
            - ../ui-admin/.env.production
        ports:
            - 3002:3002
        networks:
            - management-network
        environment:
            - NODE_ENV=production

    nginx:
        container_name: management-nginx
        build:
          context: .
          dockerfile: nginx.Dockerfile
        ports:
            - "80:80"
        depends_on:
            - server
            - ui-admin
        networks:
            - management-network

networks:
    management-network:
        driver: bridge
